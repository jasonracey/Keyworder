@page "/keywords"

<PageTitle>Keywords</PageTitle>

@using Excubo.Blazor.TreeViews
@using Keyworder.Data
@using Keyworder.Utilities
@inject ClipboardService ClipboardService
@inject KeywordService KeywordService

<h1>Keywords</h1>

@if (AllKeywords == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table>
        <tr>
            <td>
                <TreeView @key="SelectedKeywords" Items="AllKeywords" InitiallyCollapsed="true" AllowSelection="true" GetChildren="(keywords) => keywords.Keywords" SortBy="(keywords) => keywords.OrderBy(keyword => keyword.Name)" @bind-SelectedItems="SelectedKeywords">
                    <ItemTemplate>
                        @context.Item.Name
                    </ItemTemplate>
                </TreeView>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <button @onclick="@(() => ClearSelectedKeywords())">
                        Clear
                    </button>
                </div>
            </td>
            <td>
                <div>
                    <button @onclick="@(() => CopyToClipboard(ToFlickrTagsString(SelectedKeywords)))">
                        Copy
                    </button>
                </div>
            </td>
        </tr>
    </table>
}

@code {
    private List<Keyword> AllKeywords = new List<Keyword>();
    private List<Keyword> SelectedKeywords = new List<Keyword>();

    protected override async Task OnInitializedAsync()
    {
        AllKeywords = (await KeywordService.GetKeywordsAsync()).ToList();
    }

    private void ClearSelectedKeywords()
    {
        SelectedKeywords = new List<Keyword>();
    }

    private async Task CopyToClipboard(string input)
    {
        await ClipboardService.WriteTextAsync(input);
    }

    private string ToFlickrTagsString(IEnumerable<Keyword> keywords)
    {
        var values = keywords
            .Where(keyword => keyword.Keywords == null)
            .Select(keyword => keyword.Name);

        return TagService.ToFlickrTagsString(values);
    }
}